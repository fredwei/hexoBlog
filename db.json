{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"themes/yilia/source/main.2d7529.css","path":"main.2d7529.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.d238ee.js","path":"mobile.d238ee.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.885efe.js","path":"slider.885efe.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.2d7529.js","path":"main.2d7529.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.59e68b.eot","path":"fonts/iconfont.59e68b.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b7ae25.ttf","path":"fonts/iconfont.b7ae25.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.ca3627.woff","path":"fonts/iconfont.ca3627.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.dba24b.svg","path":"fonts/iconfont.dba24b.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1}],"Cache":[{"_id":"themes/yilia/.babelrc","hash":"db600d40e93e6d8023737a65d58d3be7370e5e30","modified":1489569741840},{"_id":"themes/yilia/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1489569741841},{"_id":"themes/yilia/.eslintignore","hash":"ed9d8911ca08c3dd5072c48dd0be4d06f8897730","modified":1489569741856},{"_id":"themes/yilia/.eslintrc.js","hash":"303d25adf02ad65720e537a16a4a137d14bb755f","modified":1489569741856},{"_id":"themes/yilia/.gitattributes","hash":"758cfbecfa7919e99abddf3297f37cde7e3d8d4e","modified":1489569741857},{"_id":"themes/yilia/.gitignore","hash":"d5fc575329853ff620b50fc62ad4b18fa09a308a","modified":1489569741857},{"_id":"themes/yilia/README.md","hash":"0becd9c18f9d44fc364788a34a4f3ec82ca7940a","modified":1489569741858},{"_id":"themes/yilia/_config.yml","hash":"6b780b3ddc1ec7d19a4285d63dd9e8cd048890b3","modified":1490775619557},{"_id":"themes/yilia/package.json","hash":"4631f9013f0b1c5fc5d73af4c3624375bfe4d109","modified":1489569741877},{"_id":"themes/yilia/webpack.config.js","hash":"14fe482547b12b15bc78cb981c42a4ca5b6ba770","modified":1489569741911},{"_id":"source/_data/menu.yml","hash":"c1dcb3d89463bc81f4c86623474c30b5e81f5ea4","modified":1490775456511},{"_id":"source/categories/index.md","hash":"0212d250e7d95ce493af54e606aed39f09808e9f","modified":1490778547349},{"_id":"source/_posts/2017-03-22-express路由.md","hash":"8114f710aa24c8787cafc68ff35ac306eb51b553","modified":1490319788913},{"_id":"source/_posts/2017-03-23-使用hexo遇到的一个坑.md","hash":"727a2270386967cdf72e6f6bd486b5c3d88420e3","modified":1490242503159},{"_id":"source/images/avatar.jpg","hash":"54841ecafbd8e0fec6353e036238a658f5cb7e07","modified":1490776103044},{"_id":"source/_posts/2017-03-28-使用webpack构建时给window绑定事件的坑.md","hash":"cb54b4060e2cd74899991abd3d43bcedea8b1800","modified":1490695813624},{"_id":"themes/yilia/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1489569741859},{"_id":"themes/yilia/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1489569741859},{"_id":"themes/yilia/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1489569741859},{"_id":"themes/yilia/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1489569741860},{"_id":"themes/yilia/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1489569741860},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1489569741861},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1489569741861},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1489569741874},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1489569741875},{"_id":"themes/yilia/layout/index.ejs","hash":"ec498c6c0606acde997ce195dad97b267418d980","modified":1489569741875},{"_id":"themes/yilia/layout/layout.ejs","hash":"b471ab706d48e0be3f783eab1c94bf5878ef5a94","modified":1489569741875},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1489569741876},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1489569741876},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1489569741877},{"_id":"themes/yilia/source/main.2d7529.css","hash":"53e9de1ff840a59a711fe219097e41163fe95a25","modified":1490776290522},{"_id":"themes/yilia/source/mobile.d238ee.js","hash":"a054884092af1cc5c2c14e5e11a4dac6d9254481","modified":1489569741910},{"_id":"themes/yilia/source/slider.885efe.js","hash":"41a76cb10a2b344d54a15ffac68d17331fc6f3d6","modified":1489569741911},{"_id":"themes/yilia/source-src/css.ejs","hash":"cf7eab48d626433120d1ef9697f719a359817018","modified":1489569741878},{"_id":"themes/yilia/source-src/script.ejs","hash":"28abac2426761d7e715b38aadd86ce6549c8ae77","modified":1489569741902},{"_id":"themes/yilia/source/main.2d7529.js","hash":"a0359e7962038f53f9ffbd02dcc52485f8e04da8","modified":1489569741909},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"61c95c49baa2c1bfd99cf88c55ba205b44bf3d97","modified":1489569741862},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1489569741864},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1489569741864},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"4767e666849ac2600c7a1cbf94c54cf702864f80","modified":1489569741865},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1489569741865},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"db8c42ab7e339c240b7044896a3987555ea9b5b8","modified":1489569741866},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1489569741866},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1489569741867},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"12ca7d8dba56bc767b9309dda9526dcbaffc1614","modified":1489569741867},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1489569741868},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"e2b3f2b3631ef211a4d98d11f0da2d285340f10e","modified":1489572356846},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"11550a418921d330e6553be0569a94ab5a217967","modified":1489569741868},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"ccec1fc70f021cb50ac85b524e7949878ab93a18","modified":1489569741869},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"8c295469bd1602e9d3bbf2fee81ff84cacb1d701","modified":1489569741873},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"538b6d35b25cbdba7dc77feec638336625c8ef8b","modified":1489569741873},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1489569741874},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1489569741902},{"_id":"themes/yilia/source/fonts/iconfont.59e68b.eot","hash":"b7f28dc802d6e32281e8fe7930d4dd2022d00717","modified":1489569741903},{"_id":"themes/yilia/source/fonts/iconfont.b7ae25.ttf","hash":"697449e7790edd12e208706ecaa8d5d0eed44cde","modified":1489569741905},{"_id":"themes/yilia/source/fonts/iconfont.ca3627.woff","hash":"cda0ea1dc25dc3d329d7637afe2cd6aec37e351b","modified":1489569741905},{"_id":"themes/yilia/source/fonts/iconfont.dba24b.svg","hash":"f6c8d119c14f2124f4362acd6c8e00f209af5613","modified":1489569741906},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1489569741906},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1489569741907},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1489569741907},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1489569741907},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"29ba600e98ed55f7af4ade8038272c84cba21188","modified":1489569741878},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1489569741879},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"4115c4518cca3f5cf461018aa7a7321138d017cc","modified":1489569741880},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"8a0ae8ee6af8df3f215f1cd4ecc10145a5b92cf0","modified":1489569741879},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"1577a2336b3ad122f49f60dff2bc1a97d4e7b18b","modified":1489569741880},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"9069371dcc65eee63081a21e8a56a9f3dbf64c08","modified":1489569741881},{"_id":"themes/yilia/source-src/css/article.scss","hash":"55d082fec4c6bb341725567acaa29ce37d50320a","modified":1489569741881},{"_id":"themes/yilia/source-src/css/duoshuo.scss","hash":"948e44c47c3d70584da93e7ce025dede9b7573d7","modified":1489569741884},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"5dc23be94451d54f0757de85747fd75061e8cf52","modified":1489569741884},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1489569741887},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1489569741888},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"f53ea8270752b5919ec5d79224d22af91f2eda12","modified":1489569741888},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"40e5aa5056dc0b3b9f51c5b387370b612e265d4e","modified":1489569741889},{"_id":"themes/yilia/source-src/css/left.scss","hash":"869d463795c19281188783228acf7ab8f820f93f","modified":1490776328754},{"_id":"themes/yilia/source-src/css/main.scss","hash":"b63c0f9b3bf68efc3bcd7c816bcac6f2fb827528","modified":1489569741891},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"19f10fd2f0c3377aa4b165b3c2291ecf86dd9351","modified":1489569741891},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"28a01c3d85ec3194095f96988642a16d461f1077","modified":1489569741891},{"_id":"themes/yilia/source-src/css/page.scss","hash":"244c4d75c375978ff9edb74acc68825e63c6b235","modified":1489569741892},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"a557a9ed244c82b8b71e9da9de3339d92783499f","modified":1489569741892},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"2495f7e4e3b055735c531f944b5f40a118a351ec","modified":1489569741893},{"_id":"themes/yilia/source-src/css/share.scss","hash":"9d6f6884f40c191882e56a1e1e1192400944a515","modified":1489569741893},{"_id":"themes/yilia/source-src/css/social.scss","hash":"70c2e36b7161717feed1f231271ed693c36407d1","modified":1489569741894},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"399744e98e7c67939ed9b23c2670d8baad044eda","modified":1489569741894},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"915c93edd67c5326695cc7dc84b14c5f154dbcc8","modified":1489569741894},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"f5bed08765a8f0a344af5d4781ff822a57028148","modified":1489569741895},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"b81cedbe31accca82e597801186911a7b5e6841c","modified":1489569741895},{"_id":"themes/yilia/source-src/js/Q.js","hash":"e56d9710afa79b31ca6b9fbd845f6d1895f5214b","modified":1489569741896},{"_id":"themes/yilia/source-src/js/anm.js","hash":"d18f6276a352b871390a4112d479b9e58b8cdbbe","modified":1489569741897},{"_id":"themes/yilia/source-src/js/browser.js","hash":"4dc04845cf27f350922b63f1813a9c82e6e33b05","modified":1489569741898},{"_id":"themes/yilia/source-src/js/fix.js","hash":"eccdcc7ee79adebf450bc655b2e80eb6801421a6","modified":1489569741898},{"_id":"themes/yilia/source-src/js/main.js","hash":"93ca570a646c6087821d7b14cb1646bb2a0274f4","modified":1489569741899},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"461c08ffcbc724d74ec7e0ff38e171eefe0f89fd","modified":1489569741899},{"_id":"themes/yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1489569741900},{"_id":"themes/yilia/source-src/js/share.js","hash":"d4ccff8266c37363b3904226f5d035b7db882c61","modified":1489569741900},{"_id":"themes/yilia/source-src/js/slider.js","hash":"707842efee006e3ea9b6765d7460f4ef4f08e41f","modified":1489569741900},{"_id":"themes/yilia/source-src/js/util.js","hash":"3bcdeb95072b85600874424e6929e3e22cfddaa0","modified":1489569741901},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"3e0fd4479a40ddbd1571c6c953df7e23637b61f5","modified":1489569741901},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"f75b236818b6c0ec0e5e6c12a517825d6230d756","modified":1489569741869},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1489569741870},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"aae96de18d48cd3b9b7bf6fed0100e15b53cca97","modified":1489569741870},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1489569741871},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"06a2dd18ac9a43fbc9a59c61e6f795f9326e9927","modified":1489569741871},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2c4e4ca36c9bb4318506c38aca7127f1f44d827f","modified":1489569741872},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1489569741872},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"1834c3ed8560716e63bb3a50be94cac87fbbeaf3","modified":1489569741882},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"262ffcd88775080b7f511db37f58d2bcb1b2bfc7","modified":1489569741882},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"91db061c9c17628291a005e5bd4936cf9d35a6c4","modified":1489569741883},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"398a49913b4a47d928103562b1ce94520be4026a","modified":1489569741883},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"6e75bdaa46de83094ba0873099c6e7d656a22453","modified":1489569741884},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"b7f28dc802d6e32281e8fe7930d4dd2022d00717","modified":1489569741885},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f6c8d119c14f2124f4362acd6c8e00f209af5613","modified":1489569741886},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"697449e7790edd12e208706ecaa8d5d0eed44cde","modified":1489569741887},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"cda0ea1dc25dc3d329d7637afe2cd6aec37e351b","modified":1489569741887},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1489569741889},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1489569741890},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1489569741890},{"_id":"public/content.json","hash":"bbc0884cccb9a4e11560e9b349fbff0c6134d301","modified":1490778558237},{"_id":"public/2017/03/28/使用webpack构建时给window绑定事件的坑/index.html","hash":"14a45eae36e19b707e72c166baf96b6aab5ca459","modified":1490778558517},{"_id":"public/2017/03/23/使用hexo遇到的一个坑/index.html","hash":"343bb7f12c5c6d258e276140804eae536c1e0a55","modified":1490778558538},{"_id":"public/2017/03/22/express路由/index.html","hash":"1064df0d6972e89bd5363b0afc5937e5e6f36ee1","modified":1490778558539},{"_id":"public/archives/index.html","hash":"373eadbca07131c16bff154fc447541676100439","modified":1490778558539},{"_id":"public/archives/2017/index.html","hash":"7aa399d21bbf2ed19e42b8facb7b0730f2baa552","modified":1490778558539},{"_id":"public/archives/2017/03/index.html","hash":"fb9eda9111dff8d10329d9b9e497bd8055de9cbd","modified":1490778558539},{"_id":"public/categories/分享/index.html","hash":"a0a4a04ff1fb9f659a0a999af4c11f81312912e6","modified":1490778558539},{"_id":"public/categories/填坑/index.html","hash":"858d409eea17fe8523364bc9e0caf1c3ba198d2a","modified":1490778558539},{"_id":"public/index.html","hash":"cdc5e5f1bb1b524d72b4a2c471bd5b5567f636fa","modified":1490778558539},{"_id":"public/tags/nodejs/index.html","hash":"c40369463662a0095c4db700a7f11b35666d5c5e","modified":1490778558539},{"_id":"public/tags/express/index.html","hash":"502ba538c1efcb96c2f7249e018e7474056b5024","modified":1490778558540},{"_id":"public/tags/router/index.html","hash":"61504cf874d5aa730cf3a5f27b2e126c02bcbd9b","modified":1490778558540},{"_id":"public/tags/hexo/index.html","hash":"02e440f9c48910b83bee5f3be08d6264fbd13282","modified":1490778558540},{"_id":"public/tags/webpack/index.html","hash":"441cf8bd541778c2f1fb2f0a78aca78092a44dc8","modified":1490778558540},{"_id":"public/categories/index.html","hash":"27af27234ca1e4b243a448853268a6206d3d1121","modified":1490778558546},{"_id":"public/tags/jquery/index.html","hash":"f252b1380935943735155264258523187293e77c","modified":1490778558546},{"_id":"public/images/avatar.jpg","hash":"54841ecafbd8e0fec6353e036238a658f5cb7e07","modified":1490778558550},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1490778558551},{"_id":"public/fonts/iconfont.59e68b.eot","hash":"b7f28dc802d6e32281e8fe7930d4dd2022d00717","modified":1490778558551},{"_id":"public/fonts/iconfont.b7ae25.ttf","hash":"697449e7790edd12e208706ecaa8d5d0eed44cde","modified":1490778558551},{"_id":"public/fonts/iconfont.ca3627.woff","hash":"cda0ea1dc25dc3d329d7637afe2cd6aec37e351b","modified":1490778558551},{"_id":"public/fonts/iconfont.dba24b.svg","hash":"f6c8d119c14f2124f4362acd6c8e00f209af5613","modified":1490778558551},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1490778558551},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1490778558551},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1490778558551},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1490778558551},{"_id":"public/mobile.d238ee.js","hash":"a054884092af1cc5c2c14e5e11a4dac6d9254481","modified":1490778558567},{"_id":"public/main.2d7529.css","hash":"53e9de1ff840a59a711fe219097e41163fe95a25","modified":1490778558567},{"_id":"public/slider.885efe.js","hash":"1f1a6548c6016cc132bf65a1701cc8421a1f8414","modified":1490778558568},{"_id":"public/main.2d7529.js","hash":"988c141a741441812bcf4c408ef530d7a01522f3","modified":1490778558568}],"Category":[{"name":"分享","_id":"cj0ur28z700030ksb8wx2hlwe"},{"name":"填坑","_id":"cj0ur28zi00060ksbothqh4cj"}],"Data":[{"_id":"menu","data":{"Home":"/","Category":"/category/","Gallery":"/gallery/","Archives":"/archives/"}}],"Page":[{"title":"categories","date":"2017-03-29T09:09:07.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-03-29 17:09:07\n---\n","updated":"2017-03-29T09:09:07.349Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cj0ur28ys00000ksb2mks9155","content":"","excerpt":"","more":""}],"Post":[{"title":"Express路由","date":"2017-03-22T08:11:33.000Z","_content":"## 一、简介\n\n>1、Express 是一个基于 Node.js 平台的极简、灵活的web应用开发框架，它提供一系列强大的特性，帮助你创建各种 Web 和移动设备应用。\n\n>2、丰富的 HTTP 快捷方法和任意排列组合的 Connect 中间件，让你创建健壮、友好的 API 变得既快速又简单。 （ Express 是一个自身功能极简，完全是由路由和中间件构成一个的 web 开发框架）\n\n>3、Express 不对 Node.js 已有的特性进行二次抽象，我们只是在它之上扩展了 Web 应用所需的基本功能。\n\n&nbsp;\n\n<!-- more -->\n\n## 二、express环境搭建\n\n1、安装nodejs和npm，建议安装淘宝提供的国内镜像cnpm，这样安装比较快\n\n``` javascript\n$ npm install –g cnpm\n```\n\n2、新建一个目录，在目录下执行\n\n``` javascript\n$ cnpm install express --save\n```\n\n3、express环境已经搭建好了\n\n&nbsp;\n\n## 三、基本路由\n\n1、简单版，除了get请求，还有post、put、delete\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\napp.get('/', function (req, res) {\n    res.send('Hello World! <a href=\"/news\">to news</a>');\n});\n\napp.get('/news', function (req, res) {\n    res.send('this is news. <a href=\"/\">back</a>');\n}).post('/news', function (req, res) {\n    console.log('query：' + req.query);\n    console.log('body：' + req.body);\n    res.send({\n        code: 'abc123',\n        msg: 'get a post request!',\n        data: req.query\n    });\n}).put('/news', function (req, res) {\n    console.log('query：' + req.query);\n    console.log('body：' + req.body);\n    res.send({\n        code: 'abc123',\n        msg: 'get a put request!',\n        data: req.query\n    });\n}).delete('/news', function (req, res) {\n    console.log('query：' + req.query);\n    console.log('body：' + req.body);\n    res.send({\n        code: 'abc123',\n        msg: 'get a delete request!',\n        data: req.query\n    });\n});\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\n2、字符匹配模式\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n// 路径\nvar _routeStr = ['start'];\n\nvar _routeList = ['<ol>'];\n_routeList.push('<li>ab?cd（匹配 acd 和 abcd）</li>');\n_routeList.push('<li>ab+cd（匹配 abcd、abbcd、abbbcd等）</li>');\n_routeList.push('<li>ab*cd（匹配 abcd、abxcd、abRABDOMcd、ab123cd等）</li>');\n_routeList.push('<li>ab(cd)?e（匹配 /abe 和 /abcde）</li>');\n_routeList.push('</ol>');\n\n\napp.all('*', function (req, res, next) {\n    console.log('Accessing：' + new Date());\n    _routeStr = ['start'];\n    next();\n});\n\n\n// 匹配 acd 和 abcd\napp.get('/ab?cd', function(req, res, next) {\n  // res.send('ab?cd');\n  _routeStr.push('ab?cd');\n  next();\n});\n\n// 匹配 abcd、abbcd、abbbcd等\napp.get('/ab+cd', function(req, res, next) {\n  // res.send('ab+cd');\n  \n  _routeStr.push('ab+cd');\n  next();\n});\n\n// 匹配 abcd、abxcd、abRABDOMcd、ab123cd等\napp.get('/ab*cd', function(req, res, next) {\n  // res.send('ab*cd');\n  _routeStr.push('ab*cd');\n  next();\n});\n\n// 匹配 /abe 和 /abcde\napp.get('/ab(cd)?e', function(req, res, next) {\n // res.send('ab(cd)?e');\n _routeStr.push('ab(cd)?e');\n next();\n});\n\napp.get('*', function(req, res) {\n    _routeStr.push('end');\n\n    var _html = '<p>' + _routeStr.join('  ====>  ') + '</p>';\n\n    res.send(_routeList.join('') + _html);\n});\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\n3、正则匹配模式\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n// 路径\nvar _routeStr = ['start'];\n\nvar _routeList = ['<ol>'];\n_routeList.push('<li>/a/（匹配任何路径中含有 a 的路径');\n_routeList.push('<li>/.*fly$/（匹配 butterfly、dragonfly，不匹配 butterflyman、dragonfly man等）</li>');\n_routeList.push('</ol>');\n\n\napp.all('*', function (req, res, next) {\n    console.log('Accessing：' + new Date());\n    _routeStr = ['start'];\n    next();\n});\n\n\n// 匹配任何路径中含有 a 的路径：\napp.get(/a/, function(req, res, next) {\n  _routeStr.push('/a/');\n  next();\n});\n\n// 匹配 butterfly、dragonfly，不匹配 butterflyman、dragonfly man等\napp.get(/.*fly$/, function(req, res, next) {\n  _routeStr.push('/.*fly$/');\n  next();\n});\n\napp.get('*', function(req, res) {\n    _routeStr.push('end');\n\n    var _html = '<p>' + _routeStr.join('  ====>  ') + '</p>';\n\n    res.send(_routeList.join('') + _html);\n});\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\n3、执行多个回调\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n// 多个回调函数，需指定执行next\napp.get('/b', function (req, res, next) {\n    console.log('this is function b one');\n    next();\n}, function (req, res) {\n    console.log('this is function b two');\n\n    res.send('Hello from B!');\n});\n\n\n// 多个回调传入，需指定执行next，最后必须有send\nvar cb0 = function (req, res, next) {\n  console.log('CB0');\n  next();\n}\n\nvar cb1 = function (req, res, next) {\n  console.log('CB1');\n  next();\n}\n\nvar cb2 = function (req, res) {\n  res.send('Hello from C!');\n}\n\napp.get('/c', [cb0, cb1, cb2]);\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\n&nbsp;\n\n## 四、中间件router\n\n1、通过require导入各种路由配置文件\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n\nvar _router1 = require('./router/r1.js');\nvar _router2 = require('./router/r2.js');\nvar _router3 = require('./router/r3.js');\nvar _router4 = require('./router/r4.js');\n\n\napp.use('/', _router1);\napp.use('/r2', _router2);\napp.use('/r3', _router3);\napp.use('/r4', _router4);\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\n2、简单版\n\n``` javascript\nvar express = require('express');\nvar router = express.Router();\n\n// 该路由使用的中间件\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now());\n  next();\n});\n\n// 定义网站主页的路由\nrouter.get('/', function(req, res) {\n  res.send('Birds home page');\n});\n\n// 定义 about 页面的路由\nrouter.get('/about', function(req, res) {\n    res.send('About birds');\n});\n\nmodule.exports = router;\n```\n\n3、通过路由中间件控制\n\n``` javascript\nvar express = require('express');\nvar router = express.Router();\n\n// 该路由使用的中间件\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now());\n  next();\n});\n\n// 一个中间件栈，显示任何指向 /user/:id 的 HTTP 请求的信息\nrouter.use('/user/:id', function(req, res, next) {\n    console.log('Request URL:', req.originalUrl);\n    next();\n}, function (req, res, next) {\n    console.log('Request Type:', req.method);\n    next();\n});\n\n// 一个中间件栈，处理指向 /user/:id 的 GET 请求\nrouter.get('/user/:id', function (req, res, next) {\n    console.log(req.params, req.params.id == 0);\n  // 如果 user id 为 0, 跳到下一个路由\n  if (req.params.id == 0){\n      res.send('ID：' + req.params.id);\n  }\n  // 负责将控制权交给栈中下一个中间件\n  else{\n      next();\n  }\n}, function (req, res, next) {\n    // 渲染常规页面\n    res.send('next function ID：' + req.params.id);\n\n    // 填到下一个路由\n    // next();\n});\n\nmodule.exports = router;\n```\n\n使用`router.param`\n\n``` javascript\nvar express = require('express');\nvar router = express.Router();\n\n// 该路由使用的中间件\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now());\n  next();\n});\n\nvar _pid;\n\nrouter.get('/blog/:pid', function (req, res, next) {\n    console.log('get function');\n});\n\n\nrouter.param('pid', function (req, res, next, pid){\n    console.log('param function');\n    // console.log(req.query);\n\n    setTimeout(function(){\n        _pid = pid;\n\n        res.send('my pid is：' + pid + '&&' + req.query.id);\n    }, 1000);\n\n    next();\n});\n\nmodule.exports = router;\n```\n\n多个参数的情况下\n\n``` javascript\nvar express = require('express');\nvar router = express.Router();\n\n// 该路由使用的中间件\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now());\n  next();\n});\n\n// 无效，可能是版本问题\n// router.param(['id', 'page'], function (req, res, next, value) {\n//   console.log('CALLED ONLY ONCE with', value);\n//   next();\n// })\n\n\nrouter.param('nid', function (req, res, next, value) {\n  console.log('nid：', value);\n  next();\n});\n\nrouter.param('page', function (req, res, next, value) {\n  console.log('page：', value);\n  next();\n});\n\nrouter.get('/news/:nid/:page', function (req, res, next) {\n  console.log('although this matches');\n  next();\n});\n\nrouter.get('/news/:nid/:page', function (req, res) {\n  console.log('and this matches too');\n  res.send('ok');\n});\n\nmodule.exports = router;\n```\n\n&nbsp;\n\n## 五、静态资源目录\n\n也算是属于路由中的一部分，负责静态资源的路径设置\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n\napp.use(express.static(__dirname + '/images'));\napp.use('/pic', express.static(__dirname + '/images'));\napp.use('/img', express.static(__dirname + '/images'));\n\n\napp.get('/img', function (req, res) {\n    var _html = '';\n\n    _html += '<p>/icon.png</p><img src=\"/icon.png\" />';\n    _html += '<p>/pic/icon.png</p><img src=\"/pic/icon.png\" />';\n    _html += '<p>/img/icon.png</p><img src=\"/img/icon.png\" />';\n\n    res.send(_html);\n});\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n&nbsp;\n\n## 六、实例源码\n\n[github express_demo](https://github.com/ingdanfed/express_demo)","source":"_posts/2017-03-22-express路由.md","raw":"---\ntitle: Express路由\ndate: 2017-03-22 16:11:33\ntags: \n- nodejs\n- express\n- router\ncategories: \n- 分享\n---\n## 一、简介\n\n>1、Express 是一个基于 Node.js 平台的极简、灵活的web应用开发框架，它提供一系列强大的特性，帮助你创建各种 Web 和移动设备应用。\n\n>2、丰富的 HTTP 快捷方法和任意排列组合的 Connect 中间件，让你创建健壮、友好的 API 变得既快速又简单。 （ Express 是一个自身功能极简，完全是由路由和中间件构成一个的 web 开发框架）\n\n>3、Express 不对 Node.js 已有的特性进行二次抽象，我们只是在它之上扩展了 Web 应用所需的基本功能。\n\n&nbsp;\n\n<!-- more -->\n\n## 二、express环境搭建\n\n1、安装nodejs和npm，建议安装淘宝提供的国内镜像cnpm，这样安装比较快\n\n``` javascript\n$ npm install –g cnpm\n```\n\n2、新建一个目录，在目录下执行\n\n``` javascript\n$ cnpm install express --save\n```\n\n3、express环境已经搭建好了\n\n&nbsp;\n\n## 三、基本路由\n\n1、简单版，除了get请求，还有post、put、delete\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\napp.get('/', function (req, res) {\n    res.send('Hello World! <a href=\"/news\">to news</a>');\n});\n\napp.get('/news', function (req, res) {\n    res.send('this is news. <a href=\"/\">back</a>');\n}).post('/news', function (req, res) {\n    console.log('query：' + req.query);\n    console.log('body：' + req.body);\n    res.send({\n        code: 'abc123',\n        msg: 'get a post request!',\n        data: req.query\n    });\n}).put('/news', function (req, res) {\n    console.log('query：' + req.query);\n    console.log('body：' + req.body);\n    res.send({\n        code: 'abc123',\n        msg: 'get a put request!',\n        data: req.query\n    });\n}).delete('/news', function (req, res) {\n    console.log('query：' + req.query);\n    console.log('body：' + req.body);\n    res.send({\n        code: 'abc123',\n        msg: 'get a delete request!',\n        data: req.query\n    });\n});\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\n2、字符匹配模式\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n// 路径\nvar _routeStr = ['start'];\n\nvar _routeList = ['<ol>'];\n_routeList.push('<li>ab?cd（匹配 acd 和 abcd）</li>');\n_routeList.push('<li>ab+cd（匹配 abcd、abbcd、abbbcd等）</li>');\n_routeList.push('<li>ab*cd（匹配 abcd、abxcd、abRABDOMcd、ab123cd等）</li>');\n_routeList.push('<li>ab(cd)?e（匹配 /abe 和 /abcde）</li>');\n_routeList.push('</ol>');\n\n\napp.all('*', function (req, res, next) {\n    console.log('Accessing：' + new Date());\n    _routeStr = ['start'];\n    next();\n});\n\n\n// 匹配 acd 和 abcd\napp.get('/ab?cd', function(req, res, next) {\n  // res.send('ab?cd');\n  _routeStr.push('ab?cd');\n  next();\n});\n\n// 匹配 abcd、abbcd、abbbcd等\napp.get('/ab+cd', function(req, res, next) {\n  // res.send('ab+cd');\n  \n  _routeStr.push('ab+cd');\n  next();\n});\n\n// 匹配 abcd、abxcd、abRABDOMcd、ab123cd等\napp.get('/ab*cd', function(req, res, next) {\n  // res.send('ab*cd');\n  _routeStr.push('ab*cd');\n  next();\n});\n\n// 匹配 /abe 和 /abcde\napp.get('/ab(cd)?e', function(req, res, next) {\n // res.send('ab(cd)?e');\n _routeStr.push('ab(cd)?e');\n next();\n});\n\napp.get('*', function(req, res) {\n    _routeStr.push('end');\n\n    var _html = '<p>' + _routeStr.join('  ====>  ') + '</p>';\n\n    res.send(_routeList.join('') + _html);\n});\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\n3、正则匹配模式\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n// 路径\nvar _routeStr = ['start'];\n\nvar _routeList = ['<ol>'];\n_routeList.push('<li>/a/（匹配任何路径中含有 a 的路径');\n_routeList.push('<li>/.*fly$/（匹配 butterfly、dragonfly，不匹配 butterflyman、dragonfly man等）</li>');\n_routeList.push('</ol>');\n\n\napp.all('*', function (req, res, next) {\n    console.log('Accessing：' + new Date());\n    _routeStr = ['start'];\n    next();\n});\n\n\n// 匹配任何路径中含有 a 的路径：\napp.get(/a/, function(req, res, next) {\n  _routeStr.push('/a/');\n  next();\n});\n\n// 匹配 butterfly、dragonfly，不匹配 butterflyman、dragonfly man等\napp.get(/.*fly$/, function(req, res, next) {\n  _routeStr.push('/.*fly$/');\n  next();\n});\n\napp.get('*', function(req, res) {\n    _routeStr.push('end');\n\n    var _html = '<p>' + _routeStr.join('  ====>  ') + '</p>';\n\n    res.send(_routeList.join('') + _html);\n});\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\n3、执行多个回调\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n// 多个回调函数，需指定执行next\napp.get('/b', function (req, res, next) {\n    console.log('this is function b one');\n    next();\n}, function (req, res) {\n    console.log('this is function b two');\n\n    res.send('Hello from B!');\n});\n\n\n// 多个回调传入，需指定执行next，最后必须有send\nvar cb0 = function (req, res, next) {\n  console.log('CB0');\n  next();\n}\n\nvar cb1 = function (req, res, next) {\n  console.log('CB1');\n  next();\n}\n\nvar cb2 = function (req, res) {\n  res.send('Hello from C!');\n}\n\napp.get('/c', [cb0, cb1, cb2]);\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\n&nbsp;\n\n## 四、中间件router\n\n1、通过require导入各种路由配置文件\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n\nvar _router1 = require('./router/r1.js');\nvar _router2 = require('./router/r2.js');\nvar _router3 = require('./router/r3.js');\nvar _router4 = require('./router/r4.js');\n\n\napp.use('/', _router1);\napp.use('/r2', _router2);\napp.use('/r3', _router3);\napp.use('/r4', _router4);\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\n2、简单版\n\n``` javascript\nvar express = require('express');\nvar router = express.Router();\n\n// 该路由使用的中间件\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now());\n  next();\n});\n\n// 定义网站主页的路由\nrouter.get('/', function(req, res) {\n  res.send('Birds home page');\n});\n\n// 定义 about 页面的路由\nrouter.get('/about', function(req, res) {\n    res.send('About birds');\n});\n\nmodule.exports = router;\n```\n\n3、通过路由中间件控制\n\n``` javascript\nvar express = require('express');\nvar router = express.Router();\n\n// 该路由使用的中间件\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now());\n  next();\n});\n\n// 一个中间件栈，显示任何指向 /user/:id 的 HTTP 请求的信息\nrouter.use('/user/:id', function(req, res, next) {\n    console.log('Request URL:', req.originalUrl);\n    next();\n}, function (req, res, next) {\n    console.log('Request Type:', req.method);\n    next();\n});\n\n// 一个中间件栈，处理指向 /user/:id 的 GET 请求\nrouter.get('/user/:id', function (req, res, next) {\n    console.log(req.params, req.params.id == 0);\n  // 如果 user id 为 0, 跳到下一个路由\n  if (req.params.id == 0){\n      res.send('ID：' + req.params.id);\n  }\n  // 负责将控制权交给栈中下一个中间件\n  else{\n      next();\n  }\n}, function (req, res, next) {\n    // 渲染常规页面\n    res.send('next function ID：' + req.params.id);\n\n    // 填到下一个路由\n    // next();\n});\n\nmodule.exports = router;\n```\n\n使用`router.param`\n\n``` javascript\nvar express = require('express');\nvar router = express.Router();\n\n// 该路由使用的中间件\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now());\n  next();\n});\n\nvar _pid;\n\nrouter.get('/blog/:pid', function (req, res, next) {\n    console.log('get function');\n});\n\n\nrouter.param('pid', function (req, res, next, pid){\n    console.log('param function');\n    // console.log(req.query);\n\n    setTimeout(function(){\n        _pid = pid;\n\n        res.send('my pid is：' + pid + '&&' + req.query.id);\n    }, 1000);\n\n    next();\n});\n\nmodule.exports = router;\n```\n\n多个参数的情况下\n\n``` javascript\nvar express = require('express');\nvar router = express.Router();\n\n// 该路由使用的中间件\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now());\n  next();\n});\n\n// 无效，可能是版本问题\n// router.param(['id', 'page'], function (req, res, next, value) {\n//   console.log('CALLED ONLY ONCE with', value);\n//   next();\n// })\n\n\nrouter.param('nid', function (req, res, next, value) {\n  console.log('nid：', value);\n  next();\n});\n\nrouter.param('page', function (req, res, next, value) {\n  console.log('page：', value);\n  next();\n});\n\nrouter.get('/news/:nid/:page', function (req, res, next) {\n  console.log('although this matches');\n  next();\n});\n\nrouter.get('/news/:nid/:page', function (req, res) {\n  console.log('and this matches too');\n  res.send('ok');\n});\n\nmodule.exports = router;\n```\n\n&nbsp;\n\n## 五、静态资源目录\n\n也算是属于路由中的一部分，负责静态资源的路径设置\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n\napp.use(express.static(__dirname + '/images'));\napp.use('/pic', express.static(__dirname + '/images'));\napp.use('/img', express.static(__dirname + '/images'));\n\n\napp.get('/img', function (req, res) {\n    var _html = '';\n\n    _html += '<p>/icon.png</p><img src=\"/icon.png\" />';\n    _html += '<p>/pic/icon.png</p><img src=\"/pic/icon.png\" />';\n    _html += '<p>/img/icon.png</p><img src=\"/img/icon.png\" />';\n\n    res.send(_html);\n});\n\n\nvar server = app.listen(12345, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n&nbsp;\n\n## 六、实例源码\n\n[github express_demo](https://github.com/ingdanfed/express_demo)","slug":"express路由","published":1,"updated":"2017-03-24T01:43:08.913Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0ur28yx00010ksbdaktshhm","content":"<h2 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h2><blockquote>\n<p>1、Express 是一个基于 Node.js 平台的极简、灵活的web应用开发框架，它提供一系列强大的特性，帮助你创建各种 Web 和移动设备应用。</p>\n<p>2、丰富的 HTTP 快捷方法和任意排列组合的 Connect 中间件，让你创建健壮、友好的 API 变得既快速又简单。 （ Express 是一个自身功能极简，完全是由路由和中间件构成一个的 web 开发框架）</p>\n<p>3、Express 不对 Node.js 已有的特性进行二次抽象，我们只是在它之上扩展了 Web 应用所需的基本功能。</p>\n</blockquote>\n<p>&nbsp;</p>\n<a id=\"more\"></a>\n<h2 id=\"二、express环境搭建\"><a href=\"#二、express环境搭建\" class=\"headerlink\" title=\"二、express环境搭建\"></a>二、express环境搭建</h2><p>1、安装nodejs和npm，建议安装淘宝提供的国内镜像cnpm，这样安装比较快</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install –g cnpm</div></pre></td></tr></table></figure>\n<p>2、新建一个目录，在目录下执行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cnpm install express --save</div></pre></td></tr></table></figure>\n<p>3、express环境已经搭建好了</p>\n<p>&nbsp;</p>\n<h2 id=\"三、基本路由\"><a href=\"#三、基本路由\" class=\"headerlink\" title=\"三、基本路由\"></a>三、基本路由</h2><p>1、简单版，除了get请求，还有post、put、delete</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    res.send(<span class=\"string\">'Hello World! &lt;a href=\"/news\"&gt;to news&lt;/a&gt;'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/news'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    res.send(<span class=\"string\">'this is news. &lt;a href=\"/\"&gt;back&lt;/a&gt;'</span>);</div><div class=\"line\">&#125;).post(<span class=\"string\">'/news'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'query：'</span> + req.query);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'body：'</span> + req.body);</div><div class=\"line\">    res.send(&#123;</div><div class=\"line\">        <span class=\"attr\">code</span>: <span class=\"string\">'abc123'</span>,</div><div class=\"line\">        <span class=\"attr\">msg</span>: <span class=\"string\">'get a post request!'</span>,</div><div class=\"line\">        <span class=\"attr\">data</span>: req.query</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;).put(<span class=\"string\">'/news'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'query：'</span> + req.query);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'body：'</span> + req.body);</div><div class=\"line\">    res.send(&#123;</div><div class=\"line\">        <span class=\"attr\">code</span>: <span class=\"string\">'abc123'</span>,</div><div class=\"line\">        <span class=\"attr\">msg</span>: <span class=\"string\">'get a put request!'</span>,</div><div class=\"line\">        <span class=\"attr\">data</span>: req.query</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;).delete(<span class=\"string\">'/news'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'query：'</span> + req.query);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'body：'</span> + req.body);</div><div class=\"line\">    res.send(&#123;</div><div class=\"line\">        <span class=\"attr\">code</span>: <span class=\"string\">'abc123'</span>,</div><div class=\"line\">        <span class=\"attr\">msg</span>: <span class=\"string\">'get a delete request!'</span>,</div><div class=\"line\">        <span class=\"attr\">data</span>: req.query</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>2、字符匹配模式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 路径</span></div><div class=\"line\"><span class=\"keyword\">var</span> _routeStr = [<span class=\"string\">'start'</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> _routeList = [<span class=\"string\">'&lt;ol&gt;'</span>];</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;ab?cd（匹配 acd 和 abcd）&lt;/li&gt;'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;ab+cd（匹配 abcd、abbcd、abbbcd等）&lt;/li&gt;'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;ab*cd（匹配 abcd、abxcd、abRABDOMcd、ab123cd等）&lt;/li&gt;'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;ab(cd)?e（匹配 /abe 和 /abcde）&lt;/li&gt;'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;/ol&gt;'</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">app.all(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Accessing：'</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>());</div><div class=\"line\">    _routeStr = [<span class=\"string\">'start'</span>];</div><div class=\"line\">    next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配 acd 和 abcd</span></div><div class=\"line\">app.get(<span class=\"string\">'/ab?cd'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// res.send('ab?cd');</span></div><div class=\"line\">  _routeStr.push(<span class=\"string\">'ab?cd'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配 abcd、abbcd、abbbcd等</span></div><div class=\"line\">app.get(<span class=\"string\">'/ab+cd'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// res.send('ab+cd');</span></div><div class=\"line\">  </div><div class=\"line\">  _routeStr.push(<span class=\"string\">'ab+cd'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配 abcd、abxcd、abRABDOMcd、ab123cd等</span></div><div class=\"line\">app.get(<span class=\"string\">'/ab*cd'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// res.send('ab*cd');</span></div><div class=\"line\">  _routeStr.push(<span class=\"string\">'ab*cd'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配 /abe 和 /abcde</span></div><div class=\"line\">app.get(<span class=\"string\">'/ab(cd)?e'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\"> <span class=\"comment\">// res.send('ab(cd)?e');</span></div><div class=\"line\"> _routeStr.push(<span class=\"string\">'ab(cd)?e'</span>);</div><div class=\"line\"> next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    _routeStr.push(<span class=\"string\">'end'</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> _html = <span class=\"string\">'&lt;p&gt;'</span> + _routeStr.join(<span class=\"string\">'  ====&gt;  '</span>) + <span class=\"string\">'&lt;/p&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\">    res.send(_routeList.join(<span class=\"string\">''</span>) + _html);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>3、正则匹配模式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 路径</span></div><div class=\"line\"><span class=\"keyword\">var</span> _routeStr = [<span class=\"string\">'start'</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> _routeList = [<span class=\"string\">'&lt;ol&gt;'</span>];</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;/a/（匹配任何路径中含有 a 的路径'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;/.*fly$/（匹配 butterfly、dragonfly，不匹配 butterflyman、dragonfly man等）&lt;/li&gt;'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;/ol&gt;'</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">app.all(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Accessing：'</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>());</div><div class=\"line\">    _routeStr = [<span class=\"string\">'start'</span>];</div><div class=\"line\">    next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配任何路径中含有 a 的路径：</span></div><div class=\"line\">app.get(<span class=\"regexp\">/a/</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  _routeStr.push(<span class=\"string\">'/a/'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配 butterfly、dragonfly，不匹配 butterflyman、dragonfly man等</span></div><div class=\"line\">app.get(<span class=\"regexp\">/.*fly$/</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  _routeStr.push(<span class=\"string\">'/.*fly$/'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    _routeStr.push(<span class=\"string\">'end'</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> _html = <span class=\"string\">'&lt;p&gt;'</span> + _routeStr.join(<span class=\"string\">'  ====&gt;  '</span>) + <span class=\"string\">'&lt;/p&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\">    res.send(_routeList.join(<span class=\"string\">''</span>) + _html);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>3、执行多个回调</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 多个回调函数，需指定执行next</span></div><div class=\"line\">app.get(<span class=\"string\">'/b'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'this is function b one'</span>);</div><div class=\"line\">    next();</div><div class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'this is function b two'</span>);</div><div class=\"line\"></div><div class=\"line\">    res.send(<span class=\"string\">'Hello from B!'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 多个回调传入，需指定执行next，最后必须有send</span></div><div class=\"line\"><span class=\"keyword\">var</span> cb0 = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'CB0'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> cb1 = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'CB1'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> cb2 = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.send(<span class=\"string\">'Hello from C!'</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/c'</span>, [cb0, cb1, cb2]);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>&nbsp;</p>\n<h2 id=\"四、中间件router\"><a href=\"#四、中间件router\" class=\"headerlink\" title=\"四、中间件router\"></a>四、中间件router</h2><p>1、通过require导入各种路由配置文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> _router1 = <span class=\"built_in\">require</span>(<span class=\"string\">'./router/r1.js'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> _router2 = <span class=\"built_in\">require</span>(<span class=\"string\">'./router/r2.js'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> _router3 = <span class=\"built_in\">require</span>(<span class=\"string\">'./router/r3.js'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> _router4 = <span class=\"built_in\">require</span>(<span class=\"string\">'./router/r4.js'</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">app.use(<span class=\"string\">'/'</span>, _router1);</div><div class=\"line\">app.use(<span class=\"string\">'/r2'</span>, _router2);</div><div class=\"line\">app.use(<span class=\"string\">'/r3'</span>, _router3);</div><div class=\"line\">app.use(<span class=\"string\">'/r4'</span>, _router4);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>2、简单版</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 该路由使用的中间件</span></div><div class=\"line\">router.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Time:'</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 定义网站主页的路由</span></div><div class=\"line\">router.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.send(<span class=\"string\">'Birds home page'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 定义 about 页面的路由</span></div><div class=\"line\">router.get(<span class=\"string\">'/about'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    res.send(<span class=\"string\">'About birds'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<p>3、通过路由中间件控制</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 该路由使用的中间件</span></div><div class=\"line\">router.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Time:'</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 一个中间件栈，显示任何指向 /user/:id 的 HTTP 请求的信息</span></div><div class=\"line\">router.use(<span class=\"string\">'/user/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Request URL:'</span>, req.originalUrl);</div><div class=\"line\">    next();</div><div class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Request Type:'</span>, req.method);</div><div class=\"line\">    next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 一个中间件栈，处理指向 /user/:id 的 GET 请求</span></div><div class=\"line\">router.get(<span class=\"string\">'/user/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(req.params, req.params.id == <span class=\"number\">0</span>);</div><div class=\"line\">  <span class=\"comment\">// 如果 user id 为 0, 跳到下一个路由</span></div><div class=\"line\">  <span class=\"keyword\">if</span> (req.params.id == <span class=\"number\">0</span>)&#123;</div><div class=\"line\">      res.send(<span class=\"string\">'ID：'</span> + req.params.id);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"comment\">// 负责将控制权交给栈中下一个中间件</span></div><div class=\"line\">  <span class=\"keyword\">else</span>&#123;</div><div class=\"line\">      next();</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 渲染常规页面</span></div><div class=\"line\">    res.send(<span class=\"string\">'next function ID：'</span> + req.params.id);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 填到下一个路由</span></div><div class=\"line\">    <span class=\"comment\">// next();</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<p>使用<code>router.param</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 该路由使用的中间件</span></div><div class=\"line\">router.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Time:'</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> _pid;</div><div class=\"line\"></div><div class=\"line\">router.get(<span class=\"string\">'/blog/:pid'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'get function'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">router.param(<span class=\"string\">'pid'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next, pid</span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'param function'</span>);</div><div class=\"line\">    <span class=\"comment\">// console.log(req.query);</span></div><div class=\"line\"></div><div class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        _pid = pid;</div><div class=\"line\"></div><div class=\"line\">        res.send(<span class=\"string\">'my pid is：'</span> + pid + <span class=\"string\">'&amp;&amp;'</span> + req.query.id);</div><div class=\"line\">    &#125;, <span class=\"number\">1000</span>);</div><div class=\"line\"></div><div class=\"line\">    next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<p>多个参数的情况下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 该路由使用的中间件</span></div><div class=\"line\">router.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Time:'</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 无效，可能是版本问题</span></div><div class=\"line\"><span class=\"comment\">// router.param(['id', 'page'], function (req, res, next, value) &#123;</span></div><div class=\"line\"><span class=\"comment\">//   console.log('CALLED ONLY ONCE with', value);</span></div><div class=\"line\"><span class=\"comment\">//   next();</span></div><div class=\"line\"><span class=\"comment\">// &#125;)</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">router.param(<span class=\"string\">'nid'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next, value</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'nid：'</span>, value);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">router.param(<span class=\"string\">'page'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next, value</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'page：'</span>, value);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">router.get(<span class=\"string\">'/news/:nid/:page'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'although this matches'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">router.get(<span class=\"string\">'/news/:nid/:page'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'and this matches too'</span>);</div><div class=\"line\">  res.send(<span class=\"string\">'ok'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<p>&nbsp;</p>\n<h2 id=\"五、静态资源目录\"><a href=\"#五、静态资源目录\" class=\"headerlink\" title=\"五、静态资源目录\"></a>五、静态资源目录</h2><p>也算是属于路由中的一部分，负责静态资源的路径设置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">app.use(express.static(__dirname + <span class=\"string\">'/images'</span>));</div><div class=\"line\">app.use(<span class=\"string\">'/pic'</span>, express.static(__dirname + <span class=\"string\">'/images'</span>));</div><div class=\"line\">app.use(<span class=\"string\">'/img'</span>, express.static(__dirname + <span class=\"string\">'/images'</span>));</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/img'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> _html = <span class=\"string\">''</span>;</div><div class=\"line\"></div><div class=\"line\">    _html += <span class=\"string\">'&lt;p&gt;/icon.png&lt;/p&gt;&lt;img src=\"/icon.png\" /&gt;'</span>;</div><div class=\"line\">    _html += <span class=\"string\">'&lt;p&gt;/pic/icon.png&lt;/p&gt;&lt;img src=\"/pic/icon.png\" /&gt;'</span>;</div><div class=\"line\">    _html += <span class=\"string\">'&lt;p&gt;/img/icon.png&lt;/p&gt;&lt;img src=\"/img/icon.png\" /&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\">    res.send(_html);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>&nbsp;</p>\n<h2 id=\"六、实例源码\"><a href=\"#六、实例源码\" class=\"headerlink\" title=\"六、实例源码\"></a>六、实例源码</h2><p><a href=\"https://github.com/ingdanfed/express_demo\" target=\"_blank\" rel=\"external\">github express_demo</a></p>\n","excerpt":"<h2 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h2><blockquote>\n<p>1、Express 是一个基于 Node.js 平台的极简、灵活的web应用开发框架，它提供一系列强大的特性，帮助你创建各种 Web 和移动设备应用。</p>\n<p>2、丰富的 HTTP 快捷方法和任意排列组合的 Connect 中间件，让你创建健壮、友好的 API 变得既快速又简单。 （ Express 是一个自身功能极简，完全是由路由和中间件构成一个的 web 开发框架）</p>\n<p>3、Express 不对 Node.js 已有的特性进行二次抽象，我们只是在它之上扩展了 Web 应用所需的基本功能。</p>\n</blockquote>\n<p>&nbsp;</p>","more":"<h2 id=\"二、express环境搭建\"><a href=\"#二、express环境搭建\" class=\"headerlink\" title=\"二、express环境搭建\"></a>二、express环境搭建</h2><p>1、安装nodejs和npm，建议安装淘宝提供的国内镜像cnpm，这样安装比较快</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install –g cnpm</div></pre></td></tr></table></figure>\n<p>2、新建一个目录，在目录下执行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cnpm install express --save</div></pre></td></tr></table></figure>\n<p>3、express环境已经搭建好了</p>\n<p>&nbsp;</p>\n<h2 id=\"三、基本路由\"><a href=\"#三、基本路由\" class=\"headerlink\" title=\"三、基本路由\"></a>三、基本路由</h2><p>1、简单版，除了get请求，还有post、put、delete</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    res.send(<span class=\"string\">'Hello World! &lt;a href=\"/news\"&gt;to news&lt;/a&gt;'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/news'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    res.send(<span class=\"string\">'this is news. &lt;a href=\"/\"&gt;back&lt;/a&gt;'</span>);</div><div class=\"line\">&#125;).post(<span class=\"string\">'/news'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'query：'</span> + req.query);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'body：'</span> + req.body);</div><div class=\"line\">    res.send(&#123;</div><div class=\"line\">        <span class=\"attr\">code</span>: <span class=\"string\">'abc123'</span>,</div><div class=\"line\">        <span class=\"attr\">msg</span>: <span class=\"string\">'get a post request!'</span>,</div><div class=\"line\">        <span class=\"attr\">data</span>: req.query</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;).put(<span class=\"string\">'/news'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'query：'</span> + req.query);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'body：'</span> + req.body);</div><div class=\"line\">    res.send(&#123;</div><div class=\"line\">        <span class=\"attr\">code</span>: <span class=\"string\">'abc123'</span>,</div><div class=\"line\">        <span class=\"attr\">msg</span>: <span class=\"string\">'get a put request!'</span>,</div><div class=\"line\">        <span class=\"attr\">data</span>: req.query</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;).delete(<span class=\"string\">'/news'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'query：'</span> + req.query);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'body：'</span> + req.body);</div><div class=\"line\">    res.send(&#123;</div><div class=\"line\">        <span class=\"attr\">code</span>: <span class=\"string\">'abc123'</span>,</div><div class=\"line\">        <span class=\"attr\">msg</span>: <span class=\"string\">'get a delete request!'</span>,</div><div class=\"line\">        <span class=\"attr\">data</span>: req.query</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>2、字符匹配模式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 路径</span></div><div class=\"line\"><span class=\"keyword\">var</span> _routeStr = [<span class=\"string\">'start'</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> _routeList = [<span class=\"string\">'&lt;ol&gt;'</span>];</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;ab?cd（匹配 acd 和 abcd）&lt;/li&gt;'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;ab+cd（匹配 abcd、abbcd、abbbcd等）&lt;/li&gt;'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;ab*cd（匹配 abcd、abxcd、abRABDOMcd、ab123cd等）&lt;/li&gt;'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;ab(cd)?e（匹配 /abe 和 /abcde）&lt;/li&gt;'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;/ol&gt;'</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">app.all(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Accessing：'</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>());</div><div class=\"line\">    _routeStr = [<span class=\"string\">'start'</span>];</div><div class=\"line\">    next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配 acd 和 abcd</span></div><div class=\"line\">app.get(<span class=\"string\">'/ab?cd'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// res.send('ab?cd');</span></div><div class=\"line\">  _routeStr.push(<span class=\"string\">'ab?cd'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配 abcd、abbcd、abbbcd等</span></div><div class=\"line\">app.get(<span class=\"string\">'/ab+cd'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// res.send('ab+cd');</span></div><div class=\"line\">  </div><div class=\"line\">  _routeStr.push(<span class=\"string\">'ab+cd'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配 abcd、abxcd、abRABDOMcd、ab123cd等</span></div><div class=\"line\">app.get(<span class=\"string\">'/ab*cd'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// res.send('ab*cd');</span></div><div class=\"line\">  _routeStr.push(<span class=\"string\">'ab*cd'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配 /abe 和 /abcde</span></div><div class=\"line\">app.get(<span class=\"string\">'/ab(cd)?e'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\"> <span class=\"comment\">// res.send('ab(cd)?e');</span></div><div class=\"line\"> _routeStr.push(<span class=\"string\">'ab(cd)?e'</span>);</div><div class=\"line\"> next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    _routeStr.push(<span class=\"string\">'end'</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> _html = <span class=\"string\">'&lt;p&gt;'</span> + _routeStr.join(<span class=\"string\">'  ====&gt;  '</span>) + <span class=\"string\">'&lt;/p&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\">    res.send(_routeList.join(<span class=\"string\">''</span>) + _html);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>3、正则匹配模式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 路径</span></div><div class=\"line\"><span class=\"keyword\">var</span> _routeStr = [<span class=\"string\">'start'</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> _routeList = [<span class=\"string\">'&lt;ol&gt;'</span>];</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;/a/（匹配任何路径中含有 a 的路径'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;li&gt;/.*fly$/（匹配 butterfly、dragonfly，不匹配 butterflyman、dragonfly man等）&lt;/li&gt;'</span>);</div><div class=\"line\">_routeList.push(<span class=\"string\">'&lt;/ol&gt;'</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">app.all(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Accessing：'</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>());</div><div class=\"line\">    _routeStr = [<span class=\"string\">'start'</span>];</div><div class=\"line\">    next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配任何路径中含有 a 的路径：</span></div><div class=\"line\">app.get(<span class=\"regexp\">/a/</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  _routeStr.push(<span class=\"string\">'/a/'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 匹配 butterfly、dragonfly，不匹配 butterflyman、dragonfly man等</span></div><div class=\"line\">app.get(<span class=\"regexp\">/.*fly$/</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  _routeStr.push(<span class=\"string\">'/.*fly$/'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    _routeStr.push(<span class=\"string\">'end'</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> _html = <span class=\"string\">'&lt;p&gt;'</span> + _routeStr.join(<span class=\"string\">'  ====&gt;  '</span>) + <span class=\"string\">'&lt;/p&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\">    res.send(_routeList.join(<span class=\"string\">''</span>) + _html);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>3、执行多个回调</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 多个回调函数，需指定执行next</span></div><div class=\"line\">app.get(<span class=\"string\">'/b'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'this is function b one'</span>);</div><div class=\"line\">    next();</div><div class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'this is function b two'</span>);</div><div class=\"line\"></div><div class=\"line\">    res.send(<span class=\"string\">'Hello from B!'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 多个回调传入，需指定执行next，最后必须有send</span></div><div class=\"line\"><span class=\"keyword\">var</span> cb0 = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'CB0'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> cb1 = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'CB1'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> cb2 = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.send(<span class=\"string\">'Hello from C!'</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/c'</span>, [cb0, cb1, cb2]);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>&nbsp;</p>\n<h2 id=\"四、中间件router\"><a href=\"#四、中间件router\" class=\"headerlink\" title=\"四、中间件router\"></a>四、中间件router</h2><p>1、通过require导入各种路由配置文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> _router1 = <span class=\"built_in\">require</span>(<span class=\"string\">'./router/r1.js'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> _router2 = <span class=\"built_in\">require</span>(<span class=\"string\">'./router/r2.js'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> _router3 = <span class=\"built_in\">require</span>(<span class=\"string\">'./router/r3.js'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> _router4 = <span class=\"built_in\">require</span>(<span class=\"string\">'./router/r4.js'</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">app.use(<span class=\"string\">'/'</span>, _router1);</div><div class=\"line\">app.use(<span class=\"string\">'/r2'</span>, _router2);</div><div class=\"line\">app.use(<span class=\"string\">'/r3'</span>, _router3);</div><div class=\"line\">app.use(<span class=\"string\">'/r4'</span>, _router4);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>2、简单版</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 该路由使用的中间件</span></div><div class=\"line\">router.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Time:'</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 定义网站主页的路由</span></div><div class=\"line\">router.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  res.send(<span class=\"string\">'Birds home page'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 定义 about 页面的路由</span></div><div class=\"line\">router.get(<span class=\"string\">'/about'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    res.send(<span class=\"string\">'About birds'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<p>3、通过路由中间件控制</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 该路由使用的中间件</span></div><div class=\"line\">router.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Time:'</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 一个中间件栈，显示任何指向 /user/:id 的 HTTP 请求的信息</span></div><div class=\"line\">router.use(<span class=\"string\">'/user/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Request URL:'</span>, req.originalUrl);</div><div class=\"line\">    next();</div><div class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Request Type:'</span>, req.method);</div><div class=\"line\">    next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 一个中间件栈，处理指向 /user/:id 的 GET 请求</span></div><div class=\"line\">router.get(<span class=\"string\">'/user/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(req.params, req.params.id == <span class=\"number\">0</span>);</div><div class=\"line\">  <span class=\"comment\">// 如果 user id 为 0, 跳到下一个路由</span></div><div class=\"line\">  <span class=\"keyword\">if</span> (req.params.id == <span class=\"number\">0</span>)&#123;</div><div class=\"line\">      res.send(<span class=\"string\">'ID：'</span> + req.params.id);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"comment\">// 负责将控制权交给栈中下一个中间件</span></div><div class=\"line\">  <span class=\"keyword\">else</span>&#123;</div><div class=\"line\">      next();</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 渲染常规页面</span></div><div class=\"line\">    res.send(<span class=\"string\">'next function ID：'</span> + req.params.id);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 填到下一个路由</span></div><div class=\"line\">    <span class=\"comment\">// next();</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<p>使用<code>router.param</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 该路由使用的中间件</span></div><div class=\"line\">router.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Time:'</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> _pid;</div><div class=\"line\"></div><div class=\"line\">router.get(<span class=\"string\">'/blog/:pid'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'get function'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">router.param(<span class=\"string\">'pid'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next, pid</span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'param function'</span>);</div><div class=\"line\">    <span class=\"comment\">// console.log(req.query);</span></div><div class=\"line\"></div><div class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        _pid = pid;</div><div class=\"line\"></div><div class=\"line\">        res.send(<span class=\"string\">'my pid is：'</span> + pid + <span class=\"string\">'&amp;&amp;'</span> + req.query.id);</div><div class=\"line\">    &#125;, <span class=\"number\">1000</span>);</div><div class=\"line\"></div><div class=\"line\">    next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<p>多个参数的情况下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 该路由使用的中间件</span></div><div class=\"line\">router.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Time:'</span>, <span class=\"built_in\">Date</span>.now());</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 无效，可能是版本问题</span></div><div class=\"line\"><span class=\"comment\">// router.param(['id', 'page'], function (req, res, next, value) &#123;</span></div><div class=\"line\"><span class=\"comment\">//   console.log('CALLED ONLY ONCE with', value);</span></div><div class=\"line\"><span class=\"comment\">//   next();</span></div><div class=\"line\"><span class=\"comment\">// &#125;)</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">router.param(<span class=\"string\">'nid'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next, value</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'nid：'</span>, value);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">router.param(<span class=\"string\">'page'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next, value</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'page：'</span>, value);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">router.get(<span class=\"string\">'/news/:nid/:page'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'although this matches'</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">router.get(<span class=\"string\">'/news/:nid/:page'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'and this matches too'</span>);</div><div class=\"line\">  res.send(<span class=\"string\">'ok'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<p>&nbsp;</p>\n<h2 id=\"五、静态资源目录\"><a href=\"#五、静态资源目录\" class=\"headerlink\" title=\"五、静态资源目录\"></a>五、静态资源目录</h2><p>也算是属于路由中的一部分，负责静态资源的路径设置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">app.use(express.static(__dirname + <span class=\"string\">'/images'</span>));</div><div class=\"line\">app.use(<span class=\"string\">'/pic'</span>, express.static(__dirname + <span class=\"string\">'/images'</span>));</div><div class=\"line\">app.use(<span class=\"string\">'/img'</span>, express.static(__dirname + <span class=\"string\">'/images'</span>));</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/img'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> _html = <span class=\"string\">''</span>;</div><div class=\"line\"></div><div class=\"line\">    _html += <span class=\"string\">'&lt;p&gt;/icon.png&lt;/p&gt;&lt;img src=\"/icon.png\" /&gt;'</span>;</div><div class=\"line\">    _html += <span class=\"string\">'&lt;p&gt;/pic/icon.png&lt;/p&gt;&lt;img src=\"/pic/icon.png\" /&gt;'</span>;</div><div class=\"line\">    _html += <span class=\"string\">'&lt;p&gt;/img/icon.png&lt;/p&gt;&lt;img src=\"/img/icon.png\" /&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\">    res.send(_html);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> server = app.listen(<span class=\"number\">12345</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> host = server.address().address;</div><div class=\"line\">    <span class=\"keyword\">var</span> port = server.address().port;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Example app listening at http://%s:%s'</span>, host, port);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>&nbsp;</p>\n<h2 id=\"六、实例源码\"><a href=\"#六、实例源码\" class=\"headerlink\" title=\"六、实例源码\"></a>六、实例源码</h2><p><a href=\"https://github.com/ingdanfed/express_demo\">github express_demo</a></p>"},{"title":"使用hexo遇到的一个坑","date":"2017-03-23T03:46:16.000Z","_content":"\nhexo中首页列表的摘要（excerpt）弄不出来，一直显示全文\n\n修改了N多配置都不生效，官方文档中也没有说明，唯有各种搜索答案，终于找到了！\n\n<!-- more -->\n\n原来只需要在文中加入`<!-- more -->`就可以了，这实在是个大坑！\n\n```javascript\n这就是一个简介\n\n<!-- more -->\n \n这里更多的内容\n```\n\n\n[原答案链接](http://www.cnblogs.com/pcy0/p/how-to-show-less-in-home-page-of-hexo.html, Clarence Pan的博客)","source":"_posts/2017-03-23-使用hexo遇到的一个坑.md","raw":"---\ntitle: 使用hexo遇到的一个坑\ndate: 2017-03-23 11:46:16\ntags: hexo\ncategories: 填坑\n---\n\nhexo中首页列表的摘要（excerpt）弄不出来，一直显示全文\n\n修改了N多配置都不生效，官方文档中也没有说明，唯有各种搜索答案，终于找到了！\n\n<!-- more -->\n\n原来只需要在文中加入`<!-- more -->`就可以了，这实在是个大坑！\n\n```javascript\n这就是一个简介\n\n<!-- more -->\n \n这里更多的内容\n```\n\n\n[原答案链接](http://www.cnblogs.com/pcy0/p/how-to-show-less-in-home-page-of-hexo.html, Clarence Pan的博客)","slug":"使用hexo遇到的一个坑","published":1,"updated":"2017-03-23T04:15:03.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0ur28z300020ksbrlbptvbg","content":"<p>hexo中首页列表的摘要（excerpt）弄不出来，一直显示全文</p>\n<p>修改了N多配置都不生效，官方文档中也没有说明，唯有各种搜索答案，终于找到了！</p>\n<a id=\"more\"></a>\n<p>原来只需要在文中加入<code>&lt;!-- more --&gt;</code>就可以了，这实在是个大坑！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">这就是一个简介</div><div class=\"line\"></div><div class=\"line\">&lt;!-- more --&gt;</div><div class=\"line\"> </div><div class=\"line\">这里更多的内容</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.cnblogs.com/pcy0/p/how-to-show-less-in-home-page-of-hexo.html, Clarence Pan的博客\" target=\"_blank\" rel=\"external\">原答案链接</a></p>\n","excerpt":"<p>hexo中首页列表的摘要（excerpt）弄不出来，一直显示全文</p>\n<p>修改了N多配置都不生效，官方文档中也没有说明，唯有各种搜索答案，终于找到了！</p>","more":"<p>原来只需要在文中加入<code>&lt;!-- more --&gt;</code>就可以了，这实在是个大坑！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">这就是一个简介</div><div class=\"line\"></div><div class=\"line\">&lt;!-- more --&gt;</div><div class=\"line\"> </div><div class=\"line\">这里更多的内容</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.cnblogs.com/pcy0/p/how-to-show-less-in-home-page-of-hexo.html, Clarence Pan的博客\">原答案链接</a></p>"},{"title":"使用webpack构建时给window绑定事件的坑","date":"2017-03-28T07:45:25.000Z","_content":"\n使用webpack进行构建，给window绑定了onload的事件，结果竟然死活不触发！各种排除后发现问题所在...\n\n<!-- more -->\n\n业务js文件`index.js`\n\n```javascript\nvar $ = require('jquery');\n\n$(function(){\n    // 在这里绑定，无效\n    $(window).on('load', function(){\n        console.log('页面加载完成了~');\n    });\n})\n```\n\n打开页面，然后控制台并没有打印出“页面加载完成了~”\n\n难道是使用jquery进行绑定的原因导致事件绑定无效？于是改了代码：\n\n```javascript\nvar $ = require('jquery');\n\n$(function(){\n    // 在这里绑定，还是无效\n    window.onload = function(){\n        console.log('页面加载完成了~');\n    };\n})\n```\n\n控制台依然没有打印出预期的结果，苦思良久，改成\n\n```javascript\nvar $ = require('jquery');\n\n// 在这里绑定，有效\n$(window).on('load', function(){\n    console.log('页面加载完成了~ 1');\n});\n\n// 在这里绑定，也有效\nwindow.onload = function(){\n    console.log('页面加载完成了~ 2');\n};\n\n$(function(){\n    \n})\n```\n\n那看来是'$(function(){})'这一段代码的问题了，这段代码并不难理解，当页面的dom结构加载完毕则执行，刚入门是使用'script'标签引入jquery，并没有这样的问题出现。\n\n那么现在看来是使用webpack进行构建的并发症了，至于原因，并没有深究的意愿。\n\n现在页面的js基本都是放在页面底部，程序执行到这里，其实意味着dom结构以及渲染完毕了，个人觉得在js中写'$(function(){})'是没有必要了的","source":"_posts/2017-03-28-使用webpack构建时给window绑定事件的坑.md","raw":"---\ntitle: 使用webpack构建时给window绑定事件的坑\ndate: 2017-03-28 15:45:25\ntags: \n- webpack\n- jquery\ncategories: 填坑\n---\n\n使用webpack进行构建，给window绑定了onload的事件，结果竟然死活不触发！各种排除后发现问题所在...\n\n<!-- more -->\n\n业务js文件`index.js`\n\n```javascript\nvar $ = require('jquery');\n\n$(function(){\n    // 在这里绑定，无效\n    $(window).on('load', function(){\n        console.log('页面加载完成了~');\n    });\n})\n```\n\n打开页面，然后控制台并没有打印出“页面加载完成了~”\n\n难道是使用jquery进行绑定的原因导致事件绑定无效？于是改了代码：\n\n```javascript\nvar $ = require('jquery');\n\n$(function(){\n    // 在这里绑定，还是无效\n    window.onload = function(){\n        console.log('页面加载完成了~');\n    };\n})\n```\n\n控制台依然没有打印出预期的结果，苦思良久，改成\n\n```javascript\nvar $ = require('jquery');\n\n// 在这里绑定，有效\n$(window).on('load', function(){\n    console.log('页面加载完成了~ 1');\n});\n\n// 在这里绑定，也有效\nwindow.onload = function(){\n    console.log('页面加载完成了~ 2');\n};\n\n$(function(){\n    \n})\n```\n\n那看来是'$(function(){})'这一段代码的问题了，这段代码并不难理解，当页面的dom结构加载完毕则执行，刚入门是使用'script'标签引入jquery，并没有这样的问题出现。\n\n那么现在看来是使用webpack进行构建的并发症了，至于原因，并没有深究的意愿。\n\n现在页面的js基本都是放在页面底部，程序执行到这里，其实意味着dom结构以及渲染完毕了，个人觉得在js中写'$(function(){})'是没有必要了的","slug":"使用webpack构建时给window绑定事件的坑","published":1,"updated":"2017-03-28T10:10:13.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0ur28zb00050ksbcrlzusi7","content":"<p>使用webpack进行构建，给window绑定了onload的事件，结果竟然死活不触发！各种排除后发现问题所在…</p>\n<a id=\"more\"></a>\n<p>业务js文件<code>index.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> $ = <span class=\"built_in\">require</span>(<span class=\"string\">'jquery'</span>);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在这里绑定，无效</span></div><div class=\"line\">    $(<span class=\"built_in\">window</span>).on(<span class=\"string\">'load'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'页面加载完成了~'</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>打开页面，然后控制台并没有打印出“页面加载完成了~”</p>\n<p>难道是使用jquery进行绑定的原因导致事件绑定无效？于是改了代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> $ = <span class=\"built_in\">require</span>(<span class=\"string\">'jquery'</span>);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在这里绑定，还是无效</span></div><div class=\"line\">    <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'页面加载完成了~'</span>);</div><div class=\"line\">    &#125;;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>控制台依然没有打印出预期的结果，苦思良久，改成</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> $ = <span class=\"built_in\">require</span>(<span class=\"string\">'jquery'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 在这里绑定，有效</span></div><div class=\"line\">$(<span class=\"built_in\">window</span>).on(<span class=\"string\">'load'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'页面加载完成了~ 1'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 在这里绑定，也有效</span></div><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'页面加载完成了~ 2'</span>);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    </div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>那看来是’$(function(){})’这一段代码的问题了，这段代码并不难理解，当页面的dom结构加载完毕则执行，刚入门是使用’script’标签引入jquery，并没有这样的问题出现。</p>\n<p>那么现在看来是使用webpack进行构建的并发症了，至于原因，并没有深究的意愿。</p>\n<p>现在页面的js基本都是放在页面底部，程序执行到这里，其实意味着dom结构以及渲染完毕了，个人觉得在js中写’$(function(){})’是没有必要了的</p>\n","excerpt":"<p>使用webpack进行构建，给window绑定了onload的事件，结果竟然死活不触发！各种排除后发现问题所在…</p>","more":"<p>业务js文件<code>index.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> $ = <span class=\"built_in\">require</span>(<span class=\"string\">'jquery'</span>);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在这里绑定，无效</span></div><div class=\"line\">    $(<span class=\"built_in\">window</span>).on(<span class=\"string\">'load'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'页面加载完成了~'</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>打开页面，然后控制台并没有打印出“页面加载完成了~”</p>\n<p>难道是使用jquery进行绑定的原因导致事件绑定无效？于是改了代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> $ = <span class=\"built_in\">require</span>(<span class=\"string\">'jquery'</span>);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在这里绑定，还是无效</span></div><div class=\"line\">    <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'页面加载完成了~'</span>);</div><div class=\"line\">    &#125;;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>控制台依然没有打印出预期的结果，苦思良久，改成</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> $ = <span class=\"built_in\">require</span>(<span class=\"string\">'jquery'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 在这里绑定，有效</span></div><div class=\"line\">$(<span class=\"built_in\">window</span>).on(<span class=\"string\">'load'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'页面加载完成了~ 1'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 在这里绑定，也有效</span></div><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'页面加载完成了~ 2'</span>);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    </div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>那看来是’$(function(){})’这一段代码的问题了，这段代码并不难理解，当页面的dom结构加载完毕则执行，刚入门是使用’script’标签引入jquery，并没有这样的问题出现。</p>\n<p>那么现在看来是使用webpack进行构建的并发症了，至于原因，并没有深究的意愿。</p>\n<p>现在页面的js基本都是放在页面底部，程序执行到这里，其实意味着dom结构以及渲染完毕了，个人觉得在js中写’$(function(){})’是没有必要了的</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj0ur28yx00010ksbdaktshhm","category_id":"cj0ur28z700030ksb8wx2hlwe","_id":"cj0ur28zk00080ksbvtdbc4jn"},{"post_id":"cj0ur28z300020ksbrlbptvbg","category_id":"cj0ur28zi00060ksbothqh4cj","_id":"cj0ur28zo000b0ksb5ux97x7z"},{"post_id":"cj0ur28zb00050ksbcrlzusi7","category_id":"cj0ur28zi00060ksbothqh4cj","_id":"cj0ur28zs000e0ksbuvqjqyor"}],"PostTag":[{"post_id":"cj0ur28yx00010ksbdaktshhm","tag_id":"cj0ur28za00040ksbca2rl538","_id":"cj0ur28zr000d0ksbus0datrf"},{"post_id":"cj0ur28yx00010ksbdaktshhm","tag_id":"cj0ur28zj00070ksbzl4vfk21","_id":"cj0ur28zs000f0ksbmula3u66"},{"post_id":"cj0ur28yx00010ksbdaktshhm","tag_id":"cj0ur28zl000a0ksbqnu8v52m","_id":"cj0ur28zt000h0ksbfib2jvqo"},{"post_id":"cj0ur28z300020ksbrlbptvbg","tag_id":"cj0ur28zq000c0ksb4hqx4u0b","_id":"cj0ur28zt000i0ksb75g1y4ff"},{"post_id":"cj0ur28zb00050ksbcrlzusi7","tag_id":"cj0ur28zt000g0ksbl80v4r5x","_id":"cj0ur28zu000k0ksbxs8xsp01"},{"post_id":"cj0ur28zb00050ksbcrlzusi7","tag_id":"cj0ur28zu000j0ksb29mpzeh8","_id":"cj0ur28zv000l0ksb4fc5v1s0"}],"Tag":[{"name":"nodejs","_id":"cj0ur28za00040ksbca2rl538"},{"name":"express","_id":"cj0ur28zj00070ksbzl4vfk21"},{"name":"router","_id":"cj0ur28zl000a0ksbqnu8v52m"},{"name":"hexo","_id":"cj0ur28zq000c0ksb4hqx4u0b"},{"name":"webpack","_id":"cj0ur28zt000g0ksbl80v4r5x"},{"name":"jquery","_id":"cj0ur28zu000j0ksb29mpzeh8"}]}}